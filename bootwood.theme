<?php

/**
 * @file
 * Bootwood: Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\commerce\Plugin\Commerce;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

function bootwood_preprocess_region__footer (&$variables) {
  $blocks = [
    'newsletterblock_2',
    'contactus',
    'aboutus',
    'supportandservice',
    'information'
  ];

  foreach ($blocks as $block_machine_name) {
    $block = \Drupal\block\Entity\Block::load($block_machine_name);
    $variables[$block_machine_name] = \Drupal::entityTypeManager()->getViewBuilder('block')->view($block);
  }
}

function bootwood_form_views_exposed_form_alter (&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['keys']['#placeholder'] = t('Search');
  if ($form['#id'] == 'views-exposed-form-products-page-1' || $form['#id'] == 'views-exposed-form-projects-page-2') {
    $filters_icon_path = '/' . drupal_get_path('theme', 'bootwood') . '/images/svg/filters_icon.svg';
    $form['#prefix'] = '<div id="filters-mobile-header"><span>' . t('Project filters') . '</span><img src="' . $filters_icon_path . '" /></div>';

    $form['#attached']['library'][] =  'bootwood/sidebar_position';
  }
}

function bootwood_preprocess_form(&$variables) {
  switch($variables['attributes']['id']) {
    case 'views-exposed-form-products-page-1':
    case 'views-exposed-form-projects-page-2':
    $variables['attributes']['class'][] = 'sidebar-exposed-form';
      break;
  }
}

function bootwood_preprocess_paragraph__product_files (&$variables) {
  if(isset($variables['content']['field_prod_files_doc_type'][0]['#title'])) { $variables['content']['label'] = $variables['content']['field_prod_files_doc_type'][0]['#title'];}
  if (!empty($variables['paragraph']->field_prod_files_doc_file->entity->uri->value)) {
    $uri = $variables['paragraph']->field_prod_files_doc_file->entity->uri->value;
    $url = \Drupal\Core\Url::fromUri(file_create_url($uri));
    $variables['content']['url'] = $url->getUri();
  }
}

function bootwood_preprocess_paragraph(&$variables) {
  switch ($variables['paragraph']->bundle()) {
    case 'image_and_text':
      if ($variables['paragraph']->field_inverted->value == 1) {
        $variables['attributes']['class'][] = 'paragraph-inverted';
      }
      break;
  }
}

/**
 * @param $variables
 */
function bootwood_theme_suggestions_slick_slide_alter(&$suggestions, $variables) {
  if (isset($variables['element']['#settings']['view_name']) && $variables['element']['#settings']['view_name'] == 'slider_homepage') {
    $suggestions[] = 'slick_slide__homepage';
  }
}

function bootwood_preprocess_views_view__slider_homepage(&$variables) {
  if ($variables['view_array']['#name'] == "slider_homepage") {
    $node_storage =  \Drupal::entityTypeManager()->getStorage('node');
    foreach ($variables['rows']['#build']['items'] as $key => $item) {
      $node_id = $variables['view_array']['#view']->result[$key]->nid;
      $project = $node_storage->load($node_id);
      if ($project->field_products->first()) {
        $product = $node_storage->load($project->field_products->first()->target_id);
      }
      $variables['rows']['#build']['items'][$key]['caption']['data']['total_count']['#markup'] = '0' . (string)count($variables['rows']['#build']['items']);
      if (isset($product)) {
        $element = $product->title->view();
        $variables['rows']['#build']['items'][$key]['caption']['data']['product_title']['#markup'] = render($element);
        $element = $product->field_product_application->entity->name->view();
        $variables['rows']['#build']['items'][$key]['caption']['data']['product_application']['#markup'] = render($element);
        $element = $product->field_product_gallery->first()->view();
        $variables['rows']['#build']['items'][$key]['caption']['data']['product_image']['#markup'] = render($element);
        $variables['rows']['#build']['items'][$key]['caption']['data']['product_link']['#markup'] = $product->toLink(t("See product"))->toString();
      }
    }
  }
}

function bootwood_preprocess_views_view__products(&$variables) {
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if ($language == 'en-US' && $variables["view"]->id() === 'products' && $variables["view"]->current_display === 'page_1') {
    $url = \Drupal\Core\Url::fromRoute('view.sample.page_1')->toString();
    $variables['header']['#markup'] = '<a class="samples-button btn-primary" href=' . $url . '>' . t('Order Samples') . '</a>';
  }
}

function bootwood_preprocess_node(&$variables) {
  if ($variables['node']->getType() == 'project') {
    $variables['page'] = FALSE;
    $variables['#attached']['library'][] = 'bootwood/button_to_gallery';
  }
  if ($variables['node']->getType() == 'claim' && $variables['view_mode'] == 'final_conclusion') {
    $variables['final_conclusion_node'] = TRUE;
    $node = $variables['node'];
    $form = \Drupal::formBuilder()->getForm('\Drupal\bootwood_claims\Form\FinalConclusionSendReportForm', $node);
    $variables['acceptance_form']  = $form;
  }

  if ($variables['node']->getType() == 'delivery_assignment' && $variables['view_mode'] == 'full') {
    $variables['delivery_assigment_node'] = TRUE;
    $node = $variables['node'];
    $form = \Drupal::formBuilder()->getForm('\Drupal\bootwood_claims\Form\AfterDeliveryAssignmentForm', $node);
    $variables['after_delivery_assigment']  = $form;
  }

}

function bootwood_preprocess_page_title (&$variables) {
  if (is_array($variables['title']) && $variables['is_front']) {
    unset($variables['title']);
  }
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface && $node->getType() == 'project') {
    unset ($variables['title']);
  }
}

function bootwood_preprocess_taxonomy_term (&$variables) {
  if ($node = Drupal::request()->attributes->get('node') && $variables['term']->vid->target_id == 'product_profile_types') {
    $variables['page'] = TRUE;
  }
}

function bootwood_form_comment_form_alter (&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id ) {
  $form['actions']['preview']['#access'] = FALSE;
  $form['author']['name']['#placeholder'] = t( 'Name*' );
  $form['subject']['widget'][0]['value']['#placeholder'] = t( 'Subject*' );
  $form['subject']['widget'][0]['value']['#access'] = FALSE;
  $form['comment_body']['widget'][0]['#placeholder'] = t( 'Comment*' );
}

function bootwood_form_webform_submission_webform_46_node_5731_add_form_alter (&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id ) {
  $form['elements']['region']['#empty_option'] = t('Region');
}

function bootwood_preprocess_field(&$variables) {
  if ($variables['element']['#field_name'] == 'comment' && $variables['element']['#bundle'] == 'blog_post') {
    $variables['attributes']['class'][] = 'blog-post-add-comment';
  }
  if ($variables["element"]["#field_name"] == 'field_media_media_link') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node) {
      $node_title = $node->getTitle();
      $link = $variables['items'][0]['content']['#context']['value'];
      $variables['items'][0]['content']['#prefix'] = '<a href="' . $link . '">';
      $variables['items'][0]['content']['#context']['value'] = $node_title;
      $variables['items'][0]['content']['#sufix'] = '</a>';
    }
  }
  if($variables['element']['#bundle'] == 'about_bootwood' && $variables['field_name'] == 'field_icon_and_text'){
    for($i = 0; $i < count($variables['items']); $i++) {
      $variables['items'][$i]['attributes']['class'] = array('field--icon-and-text');
    }
  }
  if($variables['element']['#field_name'] == 'field_column_1_text' ||
    $variables['element']['#field_name'] == 'field_column_2_text' ||
    $variables['element']['#field_name'] == 'field_column_3_text') {
    preg_match('!\d+!', $variables['element']['#field_name'], $matches);
    $field_name = 'field_column_' . $matches[0] . '_width';
    $paragraph = $variables['element']['#object'];
    $variables['attributes']['style'][] = 'flex-basis: ' . $paragraph->$field_name->value . '%';
  }
}
function bootwood_preprocess_views_view__sample (&$variables) {
  $variables['exposed']['field_board_type_value']['#options']['All'] = "";
  $variables['exposed']['submit']['#access'] = FALSE;
}

function bootwood_preprocess_block (&$variables) {
  if(isset($variables['elements']['content']['#block_content']->type->target_id)
  && $variables['elements']['content']['#block_content']->type->target_id == "about_bootwood") {
    $image_file_id = $variables['elements']['content']['field_image']['#items']->get(0)->target_id;
    $image_file = \Drupal\file\Entity\File::load($image_file_id);
    $uri = $image_file->uri->value;
    $variables['background_image'] = file_create_url($uri);
  }
  switch ($variables['attributes']['id']) {
    case 'block-canadianvisitorsmessage':
      $path = \Drupal::request()->getRequestUri();
      if (strpos($path, 'shipping_info')) {
        $variables['attributes']['class'][] = 'path-shipping';
      } elseif (strpos($path, 'contact_info')) {
        $variables['attributes']['class'][] = 'path-contact';
      } elseif (strpos($path, 'review')) {
        $variables['attributes']['class'][] = 'path-review';
      } elseif (strpos($path, 'complete')) {
        $variables['attributes']['class'][] = 'path-complete';
      }
      break;
    case 'block-exposedformsearchpage-1-2':
      $variables['content']['#prefix'] = '<div class="enter-keywords">' . t('Enter your keywords') . '</div>';
      $variables['elements']['content']['actions']['submit']['#value'] = t('Search');
      break;
    case 'block-dropdownlanguageselector':
    case 'block-dropdownlanguageselector-2':
      // language dropdown menu alter title text to flag image
      $langs = array_keys($variables['content']['switch-language']['#links']);
      $flags_path = file_create_url(drupal_get_path('theme', 'bootwood') . '/images/flags/');
      foreach ($langs as $lang) {
        $path = $flags_path . $lang . ".png";
        $variables['content']['switch-language']['#links'][$lang]['title'] = ['#markup' => '<img src="' . $path . '" width="30" height="20">'];
      }
      break;
    case 'block-mainnavigation':
    case 'block-secondarymenu-2':
      $variables['#attached']['library'][] =  'bootwood/sidebar_position';
      break;
  }

  if ($variables['elements']['#base_plugin_id'] == 'block_content' && isset($variables['content']['body']['#bundle'])) {
    // add block-bundle- class
    $variables['attributes']['class'][] = 'block-bundle-' . str_replace('_', '-', $variables['content']['body']['#bundle']);
  }
}

function bootwood_preprocess_dc_ajax_add_cart_popup (&$variables) {
  $variables['sku'] = $variables['product_variation']['#commerce_product_variation']->get('sku')->getValue()[0];
  $variables['title'] = $variables['product_variation']['#commerce_product_variation']->get('title')->getValue()[0];
}

/**
 * Implements hook_page_attachments_alter().
 */
function bootwood_page_attachments_alter(array &$page) {

  $breakpoints = \Drupal::service('breakpoint.manager')->getBreakpointsByGroup('bootwood'); // this should match the group name from mytheme.breakpoints.yml
  if (!empty($breakpoints)) {
    $media_queries = array();
    foreach ($breakpoints as $breakpoint) {
      foreach ($breakpoints as $id => $breakpoint) {
        $media_queries[$id] = $breakpoint->getMediaQuery();
        $active[$id] = FALSE;
      }
    }
    $page['#attached']['drupalSettings']['responsive']['breakpoints'] = $media_queries;
    $page['#attached']['drupalSettings']['responsive']['active'] = $active;
  }
}

function bootwood_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if(isset($variables['elements']['content']['#block_content']->type->target_id)) {
    $block_type = $variables['elements']['content']['#block_content']->type->target_id;
    $suggestions[] = "block__" . $block_type;
  }
}

function bootwood_preprocess_pager(&$variables) {
  if(isset($variables['mobile_items'])) {
    $variables['mobile_items'] = $variables['items'];
    $variables['mobile_items']['pages'] = array_slice($variables['mobile_items']['pages'], 0, 5, true);
  }
}

function bootwood_preprocess_field__node__field_product_files(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node) {
    $variables['zip_documentation_link'] = \Drupal\Core\Link::createFromRoute(t('Download all Documentation'),'bootwood_custom.product_files_archive', ['node' => $node->id()]);
  }
}

function bootwood_preprocess_menu__secondary_menu(&$variables) {
  $variables['attributes']['class'][] = 'navbar-nav';
}

function bootwood_preprocess_page(&$variables) {
  if (isset($variables['node']) && $variables['node']->getType() == 'page') {
    if (empty($variables['page']['sidebar_first'])) {
      $variables['page']['sidebar_first'] = ['#markup' => '<p>&nbsp;</p>'];
    }
  }
  $variables['#attached']['library'][] = 'bootwood/search_focus';
  if ($variables['is_front'] == true) {
    $variables['#attached']['library'][] = 'bootwood/header';
  }
}

function bootwood_preprocess_views_view_table__bim_files_of_products(&$variables) {
  if ($variables['rows']) {
    $variables['application_id'] = reset($variables["result"])->taxonomy_term_field_data_node_field_data_tid;
  }
  $variables['doc_type'] = current($variables["view"]->filter["field_prod_files_doc_type_target_id"]->value);
}

function bootwood_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if(in_array($form_id,["views_exposed_form"]) || $form['#id'] == 'views-exposed-form-search-page-1') {
    $form['actions']['submit']['#value'] = t('Search');
  }
}

function bootwood_library_info_alter (&$libraries, $extension) {
  if ($extension == "quickedit" && isset($libraries["quickedit.inPlaceEditor.plainText"])) {
    // Remove wersion info to allow patched script
    unset($libraries["quickedit.inPlaceEditor.plainText"]['version']);
  }
}

function bootwood_preprocess_html(&$variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'bootwood_claims.claim_thank_you') {
    $variables['attributes']['class'][] = 'claim-thank-you';
  }
}

function bootwood_preprocess_comment__field_conversation_with_customer(&$vars) {
  $date_formatter = \Drupal::service('date.formatter');
  $vars['time_ago'] = $date_formatter->formatDiff($vars["comment"]->changed->value, time(), [
    'granularity' => 1,
    'return_as_object' => TRUE,
  ]);
  $comment_user = $vars['comment']->uid->target_id;
  $bootwood_contact = $vars['comment']->entity_id->entity->field_bootwood_contact->target_id;
  if (User::load($comment_user)->hasRole('anonymous')) {
    $vars['customer'] = true;
  } elseif (User::load($comment_user)->hasRole('administrator')
    || User::load($comment_user)->hasRole('internal_bootwood')
    || User::load($comment_user)->hasRole('external_bootwood')) {
    $vars['customer'] = false;
  }
}

function bootwood_form_comment_claim_comment_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#value'] = t('Send');
  $form['actions']['submit']['#attributes']['class'][] = 'btn-primary';
}

function bootwood_theme_suggestions_feed_icon_alter(array &$suggestions, array $variables) {
  $t=0;
  if (\Drupal::routeMatch()->getRouteName() == 'view.claim_summary_table.page_1') {
    $suggestions[] = 'views_view_feed_icon__claim_summary_table';
  }
}